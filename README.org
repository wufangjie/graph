* An easy to use, rust, graph algorithm implement
** there is at most one edge from one vertex to another (can be the same)

* Done
| core data structure     |                 |
| easy to use/test macros |                 |
| dfs                     | dfs             |
|                         | dfs_last        |
|                         | iddfs           |
|                         |                 |
| bfs                     |                 |
| DAG's topological sort  | dfs             |
|                         | reference count |
| minimum spanning tree   | kruskal         |
|                         |                 |


* Todo
| minimum spanning tree               | prim                  |
| strongly connected compoments (SCC) |                       |
| single source shortest path         | bellman ford          |
|                                     | dijkstra              |
|                                     | A*                    |
| multiple sources shortest path      | johnson               |
|                                     | floyd warshall        |
| maxflow (augment path)              | bipartite matching    |
|                                     | edge disjoint paths   |
|                                     | vertex disjoint paths |
|                                     | maxflow               |
|                                     | min-cost max-flow     |
