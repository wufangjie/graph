* An easy to use, rust, graph algorithm implement
** there is at most one edge from one vertex to another (can be the same)

* Done
| core data structure                 |                       |
| easy to use/test macros             |                       |
| dfs                                 | dfs                   |
|                                     | iddfs                 |
| bfs                                 |                       |
| DAG's topological sort              | dfs                   |
|                                     | reference count       |
| strongly connected compoments (SCC) |                       |
| minimum spanning tree               | kruskal               |
|                                     | prim                  |
| single source shortest path         | dijkstra              |
|                                     | A*                    |
|                                     | bellman ford          |
| multiple sources shortest path      | johnson               |
|                                     | floyd warshall        |
| maxflow (augment path)              | bipartite matching    |
|                                     | vertex disjoint paths |

* Todo
| maxflow (augment path)              | edge disjoint paths   |
|                                     | maxflow               |
|                                     | min-cost max-flow     |
